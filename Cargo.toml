[package]
name = "governor"
version = "0.3.2-dev"
authors = ["Andreas Fuchs <asf@boinkor.net>"]
edition = "2018"
license = "MIT"
homepage = "https://github.com/antifuchs/governor"
repository = "https://github.com/antifuchs/governor.git"
readme = "README.md"
description = "A rate-limiting implementation in Rust"
documentation = "https://docs.rs/governor"
categories = ["algorithms", "network-programming", "concurrency", "no-std"]
keywords = ["rate-limiting", "rate-limit", "no_std", "gcra"]

# We use criterion, don't infer benchmark files.
autobenches = false

[package.metadata.template_ci.bench]
run = true
version = "nightly"

[package.metadata.template_ci.clippy]
run = false
version = "nightly"

[package.metadata.template_ci.additional_matrix_entries]

[package.metadata.template_ci.additional_matrix_entries.no_std_nightly]
run = true
version = "nightly"
commandline = "cargo +nightly test --no-default-features --features no_std"

[package.metadata.template_ci.additional_matrix_entries.no_std_stable]
run = true
version = "stable"
commandline = "cargo test --no-default-features --features no_std"

[badges]
circle-ci = { repository = "antifuchs/governor", branch = "master" }
maintenance = { status = "actively-developed" }

[[bench]]
name = "governor_criterion_benches"
harness = false

[dev-dependencies]
criterion = "0.3.2"
tynm = "0.1.4"
crossbeam = "0.8.0"
libc = "0.2.70"
futures = "0.3.5"
proptest = "0.10.0"
more-asserts = "0.2.1"

[features]
default = ["std", "dashmap", "jitter", "quanta"]
std = ["no-std-compat/std", "nonzero_ext/std", "futures-timer", "futures"]
jitter = ["rand"]
no_std = []

[dependencies]
nonzero_ext = { version = "0.2.0", default-features = false }
parking_lot = "0.11.0"
futures-timer = { version = "3.0.2", optional = true }
futures = { version = "0.3.5", optional = true }
rand = { version = "0.8.0", optional = true }
dashmap = { version = "4.0.2", optional = true }
quanta = { version = "0.7.0", optional = true }
no-std-compat = { version = "0.4.0", features = [ "alloc", "compat_hash" ] }
